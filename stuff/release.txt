Prepare a virtual machine (Ubuntuy Trusty 14.04 LTS) for the AppImage build process (DEPRECATED)
================================================================================================

Install a Ubuntu 14.04.5 64bit or 32bit Server VM. Then update and install some base packets:
 $ sudo apt-get update && sudo apt-get -y -y upgrade
 $ sudo apt-get -y install gpm vim apt-file

After the base installation take a snapshot of the VM.

Install packages for libserialport:
 $ sudo apt-get -y install git wget unzip gcc make autoconf automake libtool

Install packages for libsigrok:
 $ sudo apt-get -y install g++ autoconf-archive pkg-config libglib2.0-dev libglibmm-2.4-dev libzip-dev libusb-1.0-0-dev libftdi-dev libvisa-dev libieee1284-3-dev check doxygen python-numpy python-dev python-gi-dev python-setuptools swig

Install packages for smuview:
 $ sudo apt-get -y install libboost1.55-all-dev

For Trusty 64bit you can use a newer version of CMake (3.13.3) (needed by AppImageKit):
 $ wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3-Linux-x86_64.sh
 $ chmod a+x cmake-3.13.3-Linux-x86_64.sh
 $ sudo ./cmake-3.13.3-Linux-x86_64.sh --skip-license --prefix=/usr/local
For Trusty 32bit use Ubuntus CMake3 for now (If you want to use AppImageKit, you need to compile CMake 3.13.3):
 $ sudo apt-get -y install cmake3

Install Qt 5.10.1 (SmuView needs Qt >= 5.6 but Ubuntu 14.04 comes with 5.2):
 $ sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty
 $ sudo apt-get update
 $ sudo apt-get -y install qt510base
 $ sudo apt-get -y install qt510-meta-full
 $ source /opt/qt510/bin/qt510-env.sh

Install Qwt 6.1.4 (SmuView needs Qwt >= 6.1.2 but Ubuntu 14.04 comes with 6.0.?):
 $ sudo apt-get -y install mesa-common-dev libgl1-mesa-dev
 $ wget https://sourceforge.net/projects/qwt/files/qwt/6.1.4/qwt-6.1.4.tar.bz2
 $ tar xf qwt-6.1.4.tar.bz2
 $ cd qwt-6.1.4
 $ qmake qwt.pro
 $ make
Now change the QWT_INSTALL_PREFIX in qwtconfig.pri to /usr/local and then install:
 $ sudo make install

After the advanced installation take a snapshot of the VM.


Prepare a virtual machine (Ubuntuy Xenial 16.04 LTS) for the AppImage build process
===================================================================================

Install a Ubuntu 16.04.6 64bit or 32bit Server VM with hostname ubuntu[32|64].
Then update and install some base packets:
 $ sudo apt update && sudo apt -y upgrade
 $ sudo apt -y install gpm vim apt-file

After the base installation take a snapshot of the VM.

Install packages for libserialport:
 $ sudo apt -y install git wget unzip gcc make autoconf automake libtool

Install packages for libsigrok:
 $ sudo apt -y install g++ autoconf-archive pkg-config libglib2.0-dev libglibmm-2.4-dev libzip-dev libusb-1.0-0-dev libftdi1-dev libhidapi-dev libbluetooth-dev libvisa-dev libieee1284-3-dev check doxygen python3-numpy python3-dev python-gi-dev python3-setuptools swig

Set python3 as the default python version
 $ sudo update-alternatives --remove python /usr/bin/python2
 $ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10

Install packages for smuview:
 $ sudo apt -y install libboost-all-dev

For AppImageKit you need cmake >= 3.6:
 $ wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
 $ sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ xenial main'
 $ sudo apt update
Optional step:
 $ sudo apt -y install kitware-archive-keyring
 $ sudo apt-key --keyring /etc/apt/trusted.gpg del C1F34CDD40CD72DA

Install Qt 5.12.3 (SmuView needs Qt >= 5.6 but Ubuntu 16.04 comes with 5.5)
 $ sudo add-apt-repository -y ppa:beineri/opt-qt-5.12.3-xenial
 $ sudo apt update
 $ sudo apt -y install qt512base qt512-meta-full
 $ source /opt/qt512/bin/qt512-env.sh

Install newest Qwt 6.1.4:
 $ sudo apt -y install mesa-common-dev libgl1-mesa-dev
 $ wget https://sourceforge.net/projects/qwt/files/qwt/6.1.4/qwt-6.1.4.tar.bz2
 $ tar xf qwt-6.1.4.tar.bz2
 $ cd qwt-6.1.4
 $ qmake qwt.pro
 $ make
Now change the QWT_INSTALL_PREFIX in qwtconfig.pri to /usr/local and then install:
 $ sudo make install

After the advanced installation take a snapshot of the VM.


Build the SmuView release
=========================

 $ source /opt/qt512/bin/qt512-env.sh
 $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local
 $ sudo ldconfig

Now all needed sigrok packages are build:
 $ cd
 $ git clone https://github.com/knarfS/sigrok-util.git
 $ cd sigrok-util
 $ git checkout smuview
 $ cd cross-compile/linux
 $ ./sigrok-cross-linux-smuview

 $ cd
 $ mkdir -p SmuView.AppDir/usr
 $ cp -r sr/* SmuView.AppDir/usr/
 $ rm SmuView.AppDir/usr/bin/qt.conf

Python 3
 $ cp /usr/lib/x86_64-linux-gnu/libpython3.5 SmuView.AppDir/usr/lib
 $ mkdir -p SmuView.AppDir/usr/share/pyshared
 $ cp -r /usr/lib/python3.5/* SmuView.AppDir/usr/share/pyshared # AppRun expects this path.
 $ cp -r SmuView.AppDir/usr/share/pyshared/plat-x86_64-linux-gnu/* SmuView.AppDir/usr/share/pyshared

Use linuxdeployqt to create the AppImage.
Download the 64bit AppImage:
 $ wget -c https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
 $ chmod a+x linuxdeployqt-continuous-x86_64.AppImage
On Trusty 32bit you have to build your own 32bit linuxdeployqt:
 $ git clone https://github.com/probonopd/linuxdeployqt.git
 $ cd linuxdeployqt
 $ qmake
 $ make
 $ sudo make install
 $ cd
 $ wget https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2
 $ tar xf patchelf-0.9.tar.bz2
 $ ( cd patchelf-0.9/ && ./configure  && make && sudo make install )
 $ sudo wget -c "https://github.com/probonopd/AppImageKit/releases/download/continuous/appimagetool-i686.AppImage" -O /usr/local/bin/appimagetool
 $ sudo chmod a+x /usr/local/bin/appimagetool

Create AppImage for SmuView:
 $ ./linuxdeployqt-continuous-x86_64.AppImage ./SmuView.AppDir/usr/bin/smuview
 $ ( cd SmuView.AppDir/ ; cp ./usr/share/applications/org.sigrok.SmuView.desktop . )
 $ ( cd SmuView.AppDir/ ; cp ./usr/share/icons/hicolor/scalable/apps/smuview.svg . )
 $ export VERSION=$(git rev-list --count HEAD).$(git describe --tags | cut -d - -f 3)
 $ export VERSION="0.0.1"
 $ ./linuxdeployqt-continuous-x86_64.AppImage ./SmuView.AppDir/usr/bin/smuview -appimage

The alternative to linuxdeployqt is the sigrok AppImageKit script:
 $ cd
 $ sudo apt-get -y install desktop-file-utils libcairo2-dev libfuse-dev zsync
 $ git clone --single-branch --recursive https://github.com/AppImage/AppImageKit
 $ cd AppImageKit
 $ ./install-build-deps.sh # TODO: wants to install cmake!!!
 $ patch -p1 < ../sigrok-util/cross-compile/appimage/chdir.patch
 $ ./build.sh
 $ mkdir -p build/lib/appimagekit
 $ cp build/out/mksquashfs build/lib/appimagekit

To debug the SmuView AppImage:
 $ export QT_DEBUG_PLUGINS=1
 $ LD_DEBUG=libs ./SmuView.AppImage


Misc
====

Install cmake from Kitware PPA
 $ wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
 $ sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ xenial main'
 $ sudo apt -y update
 $ sudo apt -y install kitware-archive-keyring
 $ sudo apt-key --keyring /etc/apt/trusted.gpg del C1F34CDD40CD72DA
 $ sudo apt -y install cmake

Build CMake. Probably some dependencies are missing!
 $ apt-get -y install openssl-dev libgl1-mesa-dev
 $ wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3.tar.gz
 $ tar xf cmake-3.13.3.tar.gz
 $ cd cmake-3.13.3
 $ ./bootstrap
 $ make
 $ sudo make install
